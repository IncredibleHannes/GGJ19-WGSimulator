//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CreateFlatCommandComponent createFlatCommand { get { return (CreateFlatCommandComponent)GetComponent(CommandComponentsLookup.CreateFlatCommand); } }
    public bool hasCreateFlatCommand { get { return HasComponent(CommandComponentsLookup.CreateFlatCommand); } }

    public void AddCreateFlatCommand(int newFlatmates, int newPlayers) {
        var index = CommandComponentsLookup.CreateFlatCommand;
        var component = (CreateFlatCommandComponent)CreateComponent(index, typeof(CreateFlatCommandComponent));
        component.flatmates = newFlatmates;
        component.players = newPlayers;
        AddComponent(index, component);
    }

    public void ReplaceCreateFlatCommand(int newFlatmates, int newPlayers) {
        var index = CommandComponentsLookup.CreateFlatCommand;
        var component = (CreateFlatCommandComponent)CreateComponent(index, typeof(CreateFlatCommandComponent));
        component.flatmates = newFlatmates;
        component.players = newPlayers;
        ReplaceComponent(index, component);
    }

    public void RemoveCreateFlatCommand() {
        RemoveComponent(CommandComponentsLookup.CreateFlatCommand);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCreateFlatCommand;

    public static Entitas.IMatcher<CommandEntity> CreateFlatCommand {
        get {
            if (_matcherCreateFlatCommand == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CreateFlatCommand);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCreateFlatCommand = matcher;
            }

            return _matcherCreateFlatCommand;
        }
    }
}
