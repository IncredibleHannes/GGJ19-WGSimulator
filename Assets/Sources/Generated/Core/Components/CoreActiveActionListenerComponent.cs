//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public ActiveActionListenerComponent activeActionListener { get { return (ActiveActionListenerComponent)GetComponent(CoreComponentsLookup.ActiveActionListener); } }
    public bool hasActiveActionListener { get { return HasComponent(CoreComponentsLookup.ActiveActionListener); } }

    public void AddActiveActionListener(System.Collections.Generic.List<IActiveActionListener> newValue) {
        var index = CoreComponentsLookup.ActiveActionListener;
        var component = (ActiveActionListenerComponent)CreateComponent(index, typeof(ActiveActionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceActiveActionListener(System.Collections.Generic.List<IActiveActionListener> newValue) {
        var index = CoreComponentsLookup.ActiveActionListener;
        var component = (ActiveActionListenerComponent)CreateComponent(index, typeof(ActiveActionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveActiveActionListener() {
        RemoveComponent(CoreComponentsLookup.ActiveActionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherActiveActionListener;

    public static Entitas.IMatcher<CoreEntity> ActiveActionListener {
        get {
            if (_matcherActiveActionListener == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.ActiveActionListener);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherActiveActionListener = matcher;
            }

            return _matcherActiveActionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public void AddActiveActionListener(IActiveActionListener value) {
        var listeners = hasActiveActionListener
            ? activeActionListener.value
            : new System.Collections.Generic.List<IActiveActionListener>();
        listeners.Add(value);
        ReplaceActiveActionListener(listeners);
    }

    public void RemoveActiveActionListener(IActiveActionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = activeActionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveActiveActionListener();
        } else {
            ReplaceActiveActionListener(listeners);
        }
    }
}
