//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreContext {

    public CoreEntity timeOfDayEntity { get { return GetGroup(CoreMatcher.TimeOfDay).GetSingleEntity(); } }
    public TimeOfDayComponent timeOfDay { get { return timeOfDayEntity.timeOfDay; } }
    public bool hasTimeOfDay { get { return timeOfDayEntity != null; } }

    public CoreEntity SetTimeOfDay(float newValue) {
        if (hasTimeOfDay) {
            throw new Entitas.EntitasException("Could not set TimeOfDay!\n" + this + " already has an entity with TimeOfDayComponent!",
                "You should check if the context already has a timeOfDayEntity before setting it or use context.ReplaceTimeOfDay().");
        }
        var entity = CreateEntity();
        entity.AddTimeOfDay(newValue);
        return entity;
    }

    public void ReplaceTimeOfDay(float newValue) {
        var entity = timeOfDayEntity;
        if (entity == null) {
            entity = SetTimeOfDay(newValue);
        } else {
            entity.ReplaceTimeOfDay(newValue);
        }
    }

    public void RemoveTimeOfDay() {
        timeOfDayEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public TimeOfDayComponent timeOfDay { get { return (TimeOfDayComponent)GetComponent(CoreComponentsLookup.TimeOfDay); } }
    public bool hasTimeOfDay { get { return HasComponent(CoreComponentsLookup.TimeOfDay); } }

    public void AddTimeOfDay(float newValue) {
        var index = CoreComponentsLookup.TimeOfDay;
        var component = (TimeOfDayComponent)CreateComponent(index, typeof(TimeOfDayComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimeOfDay(float newValue) {
        var index = CoreComponentsLookup.TimeOfDay;
        var component = (TimeOfDayComponent)CreateComponent(index, typeof(TimeOfDayComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeOfDay() {
        RemoveComponent(CoreComponentsLookup.TimeOfDay);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherTimeOfDay;

    public static Entitas.IMatcher<CoreEntity> TimeOfDay {
        get {
            if (_matcherTimeOfDay == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.TimeOfDay);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherTimeOfDay = matcher;
            }

            return _matcherTimeOfDay;
        }
    }
}
