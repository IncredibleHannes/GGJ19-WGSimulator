//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreContext {

    public CoreEntity timeSinceLastTickEntity { get { return GetGroup(CoreMatcher.TimeSinceLastTick).GetSingleEntity(); } }
    public TimeSinceLastTickComponent timeSinceLastTick { get { return timeSinceLastTickEntity.timeSinceLastTick; } }
    public bool hasTimeSinceLastTick { get { return timeSinceLastTickEntity != null; } }

    public CoreEntity SetTimeSinceLastTick(float newValue) {
        if (hasTimeSinceLastTick) {
            throw new Entitas.EntitasException("Could not set TimeSinceLastTick!\n" + this + " already has an entity with TimeSinceLastTickComponent!",
                "You should check if the context already has a timeSinceLastTickEntity before setting it or use context.ReplaceTimeSinceLastTick().");
        }
        var entity = CreateEntity();
        entity.AddTimeSinceLastTick(newValue);
        return entity;
    }

    public void ReplaceTimeSinceLastTick(float newValue) {
        var entity = timeSinceLastTickEntity;
        if (entity == null) {
            entity = SetTimeSinceLastTick(newValue);
        } else {
            entity.ReplaceTimeSinceLastTick(newValue);
        }
    }

    public void RemoveTimeSinceLastTick() {
        timeSinceLastTickEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public TimeSinceLastTickComponent timeSinceLastTick { get { return (TimeSinceLastTickComponent)GetComponent(CoreComponentsLookup.TimeSinceLastTick); } }
    public bool hasTimeSinceLastTick { get { return HasComponent(CoreComponentsLookup.TimeSinceLastTick); } }

    public void AddTimeSinceLastTick(float newValue) {
        var index = CoreComponentsLookup.TimeSinceLastTick;
        var component = (TimeSinceLastTickComponent)CreateComponent(index, typeof(TimeSinceLastTickComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimeSinceLastTick(float newValue) {
        var index = CoreComponentsLookup.TimeSinceLastTick;
        var component = (TimeSinceLastTickComponent)CreateComponent(index, typeof(TimeSinceLastTickComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeSinceLastTick() {
        RemoveComponent(CoreComponentsLookup.TimeSinceLastTick);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherTimeSinceLastTick;

    public static Entitas.IMatcher<CoreEntity> TimeSinceLastTick {
        get {
            if (_matcherTimeSinceLastTick == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.TimeSinceLastTick);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherTimeSinceLastTick = matcher;
            }

            return _matcherTimeSinceLastTick;
        }
    }
}
